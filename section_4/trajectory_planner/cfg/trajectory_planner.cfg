#!/usr/bin/env python
PACKAGE = "trajectory_planner"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("mainFrequency",      int_t,    0, "Frequency in which the MPC is to be run (1/s)", 5, 1, 10)
gen.add("mpcIterations",      int_t,    0, "Number of MPC iterations to run when called with the main frequency", 8, 1, 30)
gen.add("targetVelocity",     int_t,    0, "Velocity to drive with (km/h)", 50, 1, 50)
gen.add("aCurvRefVel",        double_t, 0, "Max lateral acceleration when interpolating velocity samples (m/s^2)", 1.0, 0.1, 30)
gen.add("aGradRefVel",        double_t, 0, "Max longitudinal acceleration when interpolating velocity samples (m/s^2)", 5, 0.1, 30)
gen.add("velocityWeight",     double_t, 0, "Weighting factor for velocity deviation cost", 3.0,  0.0, 10.0)
gen.add("pathWeight",         double_t, 0, "Weighting factor for path deviation cost", 0.5,  0.0, 10.0)
gen.add("yawWeight",          double_t, 0, "Weighting factor for terminal yaw deviation cost", 5.0,  0.0, 10.0)
gen.add("jerkWeight",         double_t, 0, "Weighting factor for jerk cost", 1.0,  0.0, 10.0)
gen.add("alphaWeight",        double_t, 0, "Weighting factor for steering rate cost", 1.0,  0.0, 10.0)
gen.add("dynObjWeight",       double_t, 0, "Weighting factor for dynamic object cost", 1.0,  0.0, 10.0)
gen.add("trafficLightWeight", double_t, 0, "Weighting factor for traffic light", 5.0,  0.0, 10.0)
gen.add("pathRef",            double_t, 0, "Tolerated distance to reference path [m]", 2.0,  0.0, 10.0)
gen.add("jerkRef",            double_t, 0, "Ref jerk [m/s^3]", 5.0,  0.0, 10.0)
gen.add("alphaRef",           double_t, 0, "Ref alpha [deg/s]", 30.0,  0.0, 60.0)
gen.add("dynObjRef",          double_t, 0, "Target distance to dynamic object [m]", 10.0,  1.0, 50.0)
gen.add("trafficLightRef",    double_t, 0, "Target distance to traffic light [m]", 10.0,  1.0, 50.0)
gen.add("deviationMaxV",      double_t, 0, "Limit for velocity deviation before resetting MPC (km/h)", 10.0,  0.0, 30.0)
gen.add("deviationMaxA",      double_t, 0, "Limit for acceleration deviation before resetting MPC (m/s^2)", 3.0,  0.0, 10.0)
gen.add("deviationMaxY",      double_t, 0, "Limit for Y deviation before resetting MPC (m)", 1.0,  0.0, 2.0)
gen.add("deviationMaxYaw",    double_t, 0, "Limit for yaw deviation before resetting MPC (degree)", 30.0,  0.0, 180.0)
gen.add("deviationMaxDelta",  double_t, 0, "Limit for steering angle deviation before resetting MPC (degree)", 30.0,  0.0, 180.0)
gen.add("objectiveTolerance", double_t, 0, "Maximum cost value before marking trajectory invalid", 1000.0,  0.0, 10000.0)
gen.add("printSummary",       bool_t,   0, "Print out a solver summary after each MPC run", False);
exit(gen.generate(PACKAGE, "trajectory_planner", "trajectory_planner"))
